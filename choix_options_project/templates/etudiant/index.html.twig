{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('css/student-interface.css') }}" rel="stylesheet">
{% endblock %}


{% block body %}
    {% block header %}
        {{ parent() }}
    {% endblock %}
    <main id="main" class="main" style="position: relative; margin-left: auto">

        {% if student %}
            <div class="pagetitle">
                <h1>Choix d'options</h1>
                <h1>{{ student.year.name }} {{ student.parcour.name }}</h1>
            </div>
            <section class="section-content">
                <div class="row">

                    <form id="choice-form" action="{{ path('save_choice') }}" method="post">
                        <div id="popup-error" style="display: none; width: 100%">
                            <div class="alert alert-danger" role="alert">
                                Choix d'options incomplet
                            </div>
                        </div>
                        {% for error in errors %}
                            <div id="popup-error" style="width: 100%">
                                <div class="alert alert-danger" role="alert">
                                    {{ error }}
                                </div>
                            </div>
                        {% endfor %}
                        {% for bloc in student.parcour.skillBlocs %}
                            <div class="bloc-container">
                                <div class="bloc bloc-head">
                                    {{ bloc.name }}
                                </div>
                                <div class="bloc-content">
                                    {% for ue in bloc.ues %}
                                        <div class="bloc bloc-ue">
                                            <span><i>{{ ue.name }}</i></span>
                                            <span style="color: lightslategrey; font-size: 12px;"><i>UE Obligatoire</i></span>
                                        </div>
                                    {% endfor %}
                                    {% for optionBloc in bloc.optionBlocs %}
                                        <div class="sub-bloc">
                                            <div class="bloc sub-bloc-header">
                                                <span>{{ optionBloc.name }}</span>
                                                <div>
                                                    <span class="choice-made">{{ optionBloc.nbUeToChose }}</span>/<span class="choice-max">{{ optionBloc.ues|length }}</span>
                                                </div>
                                            </div>

                                            <div class="sub-bloc-content">
                                                {% for ue in optionBloc.ues %}
                                                    <div class="bloc bloc-ue">
                                                        <span><i>{{ ue.name }}</i></span>
                                                        <div>
                                                            <select name="optionBloc-{{ optionBloc.id }}-ue-{{ ue.id }}-priority" class="form-control">
                                                                <option value="" {% if currentChoice %} selected {% endif %}>Ordre de prioritè</option>
                                                                {% for p in 0..(optionBloc.ues|length -1) %}
                                                                    <option value="{{ p + 1 }}" {% if currentChoice["student-" ~ student.id ~ "-ue-" ~ ue.id] is defined and currentChoice["student-" ~ student.id ~ "-ue-" ~ ue.id] == (p+1) %} selected="selected" {% endif %}>{{ p + 1 }}</option>
                                                                {% endfor %}
                                                            </select>
                                                        </div>
                                                    </div>
                                                {% endfor %}
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                        {% endfor %}

                        <button class="btn btn-primary btn-save-choice" id="btn-choice" type="submit">Enregistrer</button>
                    </form>
                </div>
            </section>
        {% else %}
            <div class="pagetitle">
                <h1>Choix d'options</h1>
            </div>
            <div> Vous n'êtes toujours pas enregistrer dans un parcour, Demandez de l'aide auprès de votre responsable du master</div>
        {% endif %}
    </main>
    {% block script %}
        {{ parent() }}
        <script>
            var errorTostProps = {
                heading:'Votre choix est incomplet',
                text :"Veilliez completer votre choix ",
                loader: false,
                bgColor:'#f14f4f',
                position:'bottom-right',
            };
            var successTostProps = {
                heading:'Choix enregistrer',
                text :"Votre Choix est bien enregistré avec Succès",
                loader: false,
                bgColor:'#3fa55c',
                position:'bottom-right',
            };
            $("#choice-form").submit(function (e) {
                e.preventDefault();
                var form = $(this);
                var action = form.attr('action');
                var errorEmptyInput = false;
                var errorDublicateValueInOptionBloc = false;
                $('#choice-form select').map(function()
                {
                    if( !$(this).val() ) {
                        errorEmptyInput = true;
                    }
                });
                $('.sub-bloc-content').map(function()
                {

                    var selectsValues = [];
                    if(errorDublicateValueInOptionBloc){
                        return;
                    }
                    $(this).find('select').map(function(){

                        console.log($(this));
                       if(!selectsValues.includes($(this).val())){
                           selectsValues.push($(this).val());
                           console.log($(this).val());
                       } else {
                           errorDublicateValueInOptionBloc = true;
                       }
                    });

                });
                if(errorEmptyInput){
                    $.toast(errorTostProps);
                    return;
                }
                if(errorDublicateValueInOptionBloc){
                    //Show error message
                    console.log('empty select detected');
                    errorTostProps['heading'] = 'Données erronées';
                    errorTostProps['text'] = 'L\'ordre de priorité doit être unique dans chaque bloc d\'options';
                    $.toast(errorTostProps);
                    return;
                }
                $.ajax({
                    type: "POST",
                    url: action,
                    data: form.serialize(), // serializes the form's elements.
                    success: function(data)
                    {
                        console.log(data['message']);
                        $.toast(successTostProps);
                    }
                });
            });
        </script>
    {% endblock %}
{% endblock %}
